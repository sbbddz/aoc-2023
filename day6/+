fn main() {
    let input = include_str!("input.txt")
        .lines()
        .map(|x| {
            x.split(":")
                .last()
                .unwrap()
                .trim()
                .split(" ")
                .filter(|x| !x.is_empty())
                .map(|x| x.parse::<u32>().unwrap())
                .collect::<Vec<u32>>()
        })
        .collect::<Vec<Vec<u32>>>();

    let mut results = vec![];
    for i in 0..input.get(0).unwrap().len() {
        let time = input.get(0).unwrap().get(i).unwrap();
        let distance = input.get(1).unwrap().get(i).unwrap();
        let mut valid_ways_to_win = 0;

        println!("Time: {time}, Distance: {distance}");

        for j in 0..*time {
            let remaining_time = time - j;
            let travel_distance = remaining_time * j;

            if travel_distance <= *distance {
            } else {
                valid_ways_to_win += 1;
            }
        }

        results.push(valid_ways_to_win);
        println!("Time: {time}, Distance: {distance}, Valid ways to win: {valid_ways_to_win}");
    }
}
